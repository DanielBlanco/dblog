var _user$project$Components_PostList$decodePost = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$requiredAt,
	{
		ctor: '::',
		_0: 'attributes',
		_1: {
			ctor: '::',
			_0: 'published-at',
			_1: {ctor: '[]'}
		}
	},
	_elm_lang$core$Json_Decode$string,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$requiredAt,
		{
			ctor: '::',
			_0: 'attributes',
			_1: {
				ctor: '::',
				_0: 'title',
				_1: {ctor: '[]'}
			}
		},
		_elm_lang$core$Json_Decode$string,
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Post$Model)));
var _user$project$Components_PostList$decodePosts = A2(
	_elm_lang$core$Json_Decode$map,
	_elm_lang$core$Basics$identity,
	A2(
		_elm_lang$core$Json_Decode$field,
		'data',
		_elm_lang$core$Json_Decode$list(_user$project$Components_PostList$decodePost)));
var _user$project$Components_PostList$viewPost = function (post) {
	return A2(
		_elm_lang$html$Html$li,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _user$project$Post$view(post),
			_1: {ctor: '[]'}
		});
};
var _user$project$Components_PostList$viewPosts = function (posts) {
	return A2(_elm_lang$core$List$map, _user$project$Components_PostList$viewPost, posts);
};
var _user$project$Components_PostList$viewModel = function (model) {
	var _p0 = model.posts;
	switch (_p0.ctor) {
		case 'NotAsked':
			return _elm_lang$html$Html$text('Initializing.');
		case 'Loading':
			return _elm_lang$html$Html$text('Loading...');
		case 'Failure':
			return _elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Error: ',
					_elm_lang$core$Basics$toString(_p0._0)));
		default:
			return A2(
				_elm_lang$html$Html$ul,
				{ctor: '[]'},
				_user$project$Components_PostList$viewPosts(_p0._0));
	}
};
var _user$project$Components_PostList$initialModel = {posts: _krisajenkins$remotedata$RemoteData$Loading};
var _user$project$Components_PostList$Model = function (a) {
	return {posts: a};
};
var _user$project$Components_PostList$PostsResponse = function (a) {
	return {ctor: 'PostsResponse', _0: a};
};
var _user$project$Components_PostList$getPosts = function () {
	var route = '/api/posts';
	return A2(
		_elm_lang$core$Platform_Cmd$map,
		_user$project$Components_PostList$PostsResponse,
		_krisajenkins$remotedata$RemoteData$sendRequest(
			A2(_elm_lang$http$Http$get, route, _user$project$Components_PostList$decodePosts)));
}();
var _user$project$Components_PostList$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'NoOp':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'GetPosts':
				return {ctor: '_Tuple2', _0: model, _1: _user$project$Components_PostList$getPosts};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{posts: _p1._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Components_PostList$GetPosts = {ctor: 'GetPosts'};
var _user$project$Components_PostList$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('post-list'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h2,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Post List'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$Components_PostList$GetPosts),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('btn btn-primary'),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Fetch Posts'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: _user$project$Components_PostList$viewModel(model),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Components_PostList$NoOp = {ctor: 'NoOp'};
